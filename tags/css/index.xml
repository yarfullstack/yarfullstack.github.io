<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSS on YarFullStack</title>
    <link>https://yarfullstack.com/tags/css/</link>
    <description>Recent content in CSS on YarFullStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <copyright>© 2016 OlegAxenow. &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34; rel=&#34;nofollow&#34; class=&#34;mb-ml&#34; target=&#34;_blank&#34;&gt;Some rights reserved.&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 26 May 2017 12:20:23 +0300</lastBuildDate>
    <atom:link href="https://yarfullstack.com/tags/css/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CSS Stats - сбор статистики по вашему CSS</title>
      <link>https://yarfullstack.com/post/2017-05/cssstats/</link>
      <pubDate>Fri, 26 May 2017 12:20:23 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2017-05/cssstats/</guid>
      <description>&lt;p&gt;Недавно обнаружил &lt;a href=&#39;http://cssstats.com&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;cssstats.com&lt;/a&gt; &amp;mdash; сайт для визуализации статистики по CSS.
Как оказалось, ему уже несколько лет. Рекомендаций они не дают, просто дают информацию к размышлению.&lt;/p&gt;

&lt;p&gt;В статье &amp;ldquo;&lt;a href=&#39;https://webdesign.tutsplus.com/tutorials/understanding-css-stats-how-to-make-the-most-of-the-numbers--cms-22756&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Understanding CSS Stats: How to Make the Most of the Numbers&lt;/a&gt;&amp;rdquo;,
предложено несколько способов анализа этой информации.&lt;/p&gt;

&lt;p&gt;Кстати, можно такой же сайт &lt;a href=&#39;https://github.com/cssstats/cssstats&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;поднять локально&lt;/a&gt;. А можно получать статистику
 &lt;a href=&#39;https://github.com/cssstats/core&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;на node или через плагин PostCSS&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Немного про CSS и вёрстку</title>
      <link>https://yarfullstack.com/post/2017-04/css/</link>
      <pubDate>Wed, 12 Apr 2017 22:24:04 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2017-04/css/</guid>
      <description>

&lt;p&gt;Сегодня несколько интересных статей от css-tricks, csswizardry и uxdesign.cc.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;background-repeat;&lt;/li&gt;
&lt;li&gt;Проблемы с производительностью base64 для картинок;&lt;/li&gt;
&lt;li&gt;Краткая запись CSS как антипаттерн;&lt;/li&gt;
&lt;li&gt;О стилях для печати.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;background-repeat&#34;&gt;background-repeat&lt;/h2&gt;

&lt;p&gt;Ничего сверхъестественного, просто &lt;a href=&#39;https://css-tricks.com/almanac/properties/b/background-repeat/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;качественная статья&lt;/a&gt;
 о том, как можно использовать CSS-свойство &amp;ldquo;background-repeat&amp;rdquo;. Про &amp;ldquo;round&amp;rdquo; и &amp;ldquo;space&amp;rdquo; не слышал, а они поддерживаются аж с IE9 (и нормальными браузерами).&lt;/p&gt;

&lt;h2 id=&#34;проблемы-с-производительностью-base64-для-картинок&#34;&gt;Проблемы с производительностью base64 для картинок&lt;/h2&gt;

&lt;p&gt;Это две статьи:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;https://csswizardry.com/2017/02/base64-encoding-and-performance/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Base64 Encoding &amp;amp; Performance, Part 1: What’s Up with Base64?&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#39;https://csswizardry.com/2017/02/base64-encoding-and-performance-part-2/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Base64 Encoding &amp;amp; Performance, Part 2: Gathering Data&lt;/a&gt; &amp;mdash; в этой части приводятся тесты и дополнительные выводы.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Согласен с автором &amp;mdash; &lt;strong&gt;использование base64 чаще всего не оправдано&lt;/strong&gt; (если это не пара-другая мелких картинок).
Запихнув картинки в стили, мы получаем: блокировку отрисовки, отсутствие кэширования отдельных картинок, более длительный парсинг стилей.&lt;/p&gt;

&lt;p&gt;Ещё узнал, что можно делать так (чтобы грузить картинки параллельно с загрузкой CSS):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot; href=&amp;quot;masthead.jpg&amp;quot; as=&amp;quot;image&amp;quot; /&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;краткая-запись-css-как-антипаттерн&#34;&gt;Краткая запись CSS как антипаттерн&lt;/h2&gt;

&lt;p&gt;Статья-предостережение о том, что не стоит увлекаться записями вида &lt;code&gt;background: red;&lt;/code&gt;.
Есть и оригинал и перевод:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;https://csswizardry.com/2016/12/css-shorthand-syntax-considered-an-anti-pattern/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;CSS Shorthand Syntax Considered an Anti-Pattern&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#39;http://prgssr.ru/development/kratkaya-zapis-css-kak-antipattern.html&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Краткая запись CSS как антипаттерн&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;о-стилях-для-печати&#34;&gt;О стилях для печати&lt;/h2&gt;

&lt;p&gt;Напоминание о том, что они есть и несколько полезных техник. Аналогично, оригинал и перевод:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;https://uxdesign.cc/i-totally-forgot-about-print-style-sheets-f1e6604cfd6&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;I totally forgot about print style sheets&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#39;http://prgssr.ru/development/ya-sovsem-zabyl-o-stilyah-dlya-pechati.html&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Я совсем забыл о стилях для печати&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Отладка и тестирование вёрстки</title>
      <link>https://yarfullstack.com/post/2016-11/css-debug-and-testing/</link>
      <pubDate>Fri, 25 Nov 2016 12:59:32 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2016-11/css-debug-and-testing/</guid>
      <description>

&lt;p&gt;Сегодня небольшая подборка информации для тех, кому интересна тема тестирования и отладки вёрстки.
Disclaimer: некоторые статьи читал давно (возможно что-то устарело), не всеми советами пользовался, однако статьи, безусловно, полезные.&lt;/p&gt;

&lt;h2 id=&#34;chrome-dev-tools&#34;&gt;Chrome Dev Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;https://hackernoon.com/twelve-fancy-chrome-devtools-tips-dc1e39d10d9d&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Twelve Fancy Chrome DevTools Tips&lt;/a&gt;.
Понятно, что статья не всеобъемлющая, но некоторые советы очень даже полезные.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#39;https://habrahabr.ru/post/254007/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;15 советов и хитростей инструментов разработчика Chrome, которые вы обязаны знать&lt;/a&gt;.
Другой набор советов.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#39;https://habrahabr.ru/post/253359/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Справочник методов console в JS&lt;/a&gt;.
Статья 2015 года, некоторых новшеств там нет, но она очень удобно структурирована и рассматриваются все основные браузеры (а также Node.js).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#39;http://bgrins.github.io/devtools-snippets/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;DevTools Snippets&lt;/a&gt;. Коллекция сниппетов (Source / Snippets в Chrome Dev Tools).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Отдельный совет касается галочки Async в Sources / Call stack.
Её включение позволяет увидеть полный стек вызовов (например, перейти из обработчика setTimeout/setInterval к коду, который его установил).
Анализируя стек вызовов, можно посмотреть значения переменных в любой точке выполнения.&lt;/p&gt;

&lt;h2 id=&#34;отладка-css&#34;&gt;Отладка CSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#39;https://benfrain.com/debugging-css/%20&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Debugging CSS&lt;/a&gt; &amp;mdash; отличная статья, особенно для таких как я &amp;mdash;
кто занимается проблемами с вёрсткой далеко не каждый день. Можно последовательно читать, когда сам сходу не разобрался &amp;mdash; есть вероятность,
что найдёшь что-то подходящее.&lt;/p&gt;

&lt;h2 id=&#34;автоматизация-тестирования&#34;&gt;Автоматизация тестирования&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#39;https://www.smashingmagazine.com/2016/06/the-art-of-layout-testing-with-galen-framework/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;The Art Of Layout Testing With Galen Framework&lt;/a&gt; &amp;mdash; интересный фреймворк.
Пока не было случая попробовать, но по описанию очень понравилось. Если кто-то уже пробовал &amp;mdash; &lt;strong&gt;поделитесь отзывами, пожалуйста.&lt;/strong&gt;
Можно в &lt;a href=&#39;https://twitter.com/yarfs/status/802096880490610688&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;https://github.com/mapbox/pixelmatch&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Pixelmatch. The smallest, simplest and fastest JavaScript pixel-level image comparison library&lt;/a&gt;.
Из названия, думаю, всё понятно, где можно применить &amp;mdash; тоже :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Подробности про UnCSS</title>
      <link>https://yarfullstack.com/post/2016-07/uncss/</link>
      <pubDate>Fri, 15 Jul 2016 15:24:57 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2016-07/uncss/</guid>
      <description>

&lt;p&gt;Ранее я уже &lt;a href=&#34;https://yarfullstack.com/post/2016-06/css/&#34;&gt;немного упоминал UnCSS&lt;/a&gt;, а сегодня расскажу о нем подробнее.
Напомню, он, с помощью PhantomJS, рендерит страницы и выполняет JavaScript, ищет используемые классы и удаляет остальные.&lt;/p&gt;

&lt;p&gt;Лично мне удобнее всего использовать его вместе с PostCSS. При желании, можно подключить его к Grunt, Broccoli или Gulp.
Также можно использовать его API из Node.js или вызывать из командной строки.&lt;/p&gt;

&lt;p&gt;Подробности есть на &lt;a href=&#39;https://github.com/giakki/uncss&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;странице проекта&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;важные-замечания&#34;&gt;Важные замечания&lt;/h2&gt;

&lt;p&gt;Что нужно иметь в виду, при использовании UnCSS.&lt;/p&gt;

&lt;p&gt;Во-первых &amp;mdash; некоторые &amp;ldquo;динамические&amp;rdquo; стили могут быть незаслуженно выпилены.
После того, как вы это обнаружите, решить проблему можно с помощью опции ignore или простым комментарием перед селектором:
&lt;div class=&#34;microlight&#34;&gt;/* uncss:ignore */
.js .input-file {
...
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Во-вторых, что следует из первого пункта &amp;mdash; доверяйте, но проверяйте &amp;mdash; стоит периодически проверять что необходимые стили на месте.
В зависимости от масштаба проекта это можно делать либо визуально, либо с помощью автоматических тестов.&lt;/p&gt;

&lt;h2 id=&#34;опыт-использования&#34;&gt;Опыт использования&lt;/h2&gt;

&lt;p&gt;Пока могу сказать, что опыт использования небольшой, но положительный. Поскольку я использую его вместе с PostCSS, всё просто.
Сначала ставится плагин &lt;a href=&#39;https://www.npmjs.com/package/postcss-uncss&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;postcss-uncss&lt;/a&gt;:
&lt;div class=&#34;microlight&#34;&gt;npm install postcss-uncss uncss
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Затем в набор плагинов для PostCSS прописывается этот (указан один файл для примера, в принципе можно задавать несколько файлов, маски файлов тоже допустимы):&lt;/p&gt;

&lt;div class=&#34;microlight&#34;&gt;require(&#39;postcss-uncss&#39;)({
	html: [ &#39;index.html&#39; ]
}
&lt;/div&gt;

&lt;p&gt;Если требуется, задаются исключения (в строчке выше или комментариями, как в предыдущем разделе. Вот, собственно, и всё.
В результате, CSS избавляется от неиспользуемых стилей, а пользователи наслаждаются чуть более быстрой загрузкой страниц :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Рекомендации по дизайну и про Bootstrap 4</title>
      <link>https://yarfullstack.com/post/2016-07/design-recommendations-and-bootstrap4/</link>
      <pubDate>Fri, 08 Jul 2016 00:27:37 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2016-07/design-recommendations-and-bootstrap4/</guid>
      <description>

&lt;p&gt;Недавно прочитал несколько полезных статей про дизайн и вёрстку, хочу с вами поделиться.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Рекомендации по дизайну хороших и удобных форм;&lt;/li&gt;
&lt;li&gt;Визуальные отличия грядущего Bootstrap 4 от Bootstrap 3;&lt;/li&gt;
&lt;li&gt;Интересное исследование впечатлений пользователей мобильных устройств о сайтах.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;рекомендации-по-дизайну-хороших-и-удобных-форм&#34;&gt;Рекомендации по дизайну хороших и удобных форм&lt;/h2&gt;

&lt;p&gt;В статье &lt;a href=&#39;https://uxdesign.cc/design-better-forms-96fadca0f49c&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Design Better Forms (Common mistakes designers make and how to fix them)&lt;/a&gt;,
Эндрю Коул на наглядных примерах рассказывает, как надо делать и как не надо делать формы.
Статью прочитал. Соглашаюсь с автором по всем пунктам (строго говоря, по поводу одного пункта могут быть нестандартные ситуации…).
Ранее читал похожую статью &lt;a href=&#39;http://mono.company/journal/design-practice/the-10-commandments-of-good-form-design-on-the-web/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;The 10 Commandments of Good Form Design on the Web&lt;/a&gt;,
но эта мне понравилась значительно больше.&lt;/p&gt;

&lt;h2 id=&#34;визуальные-отличия-грядущего-bootstrap-4-от-bootstrap-3&#34;&gt;Визуальные отличия грядущего Bootstrap 4 от Bootstrap 3&lt;/h2&gt;

&lt;p&gt;Для тех, кто очень далёк от web-разработки &amp;mdash; речь про этот &lt;a href=&#39;http://getbootstrap.com/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Bootstrap&lt;/a&gt;.
Вероятно вы в курсе, что сейчас четвёртая версия пока только в альфе. Но поинтересоваться какие будут изменения можно и сейчас.
А Кэрол Скелли поможет достаточно просто увидеть это в статье &lt;a href=&#39;https://medium.com/wdstack/bootstrap-4-whats-new-visual-guide-c84dd81d8387&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Bootstrap 4: A Visual Guide to What’s New&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;интересное-исследование-впечатлений-пользователей-мобильных-устройств-о-сайтах&#34;&gt;Интересное исследование впечатлений пользователей мобильных устройств о сайтах&lt;/h2&gt;

&lt;p&gt;По заголовку статьи &lt;a href=&#39;http://blog.marginmedia.com.au/Our-Blog/bid/87385/10-Mobile-Web-Design-Statistics-All-Marketers-Should-Know-About&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;10 Mobile Web Design Statistics All Marketers Should Know About&lt;/a&gt;
может показаться, что она для маркетологов. Но нет. Точнее не только для них. Статья древняя &amp;mdash; 2012 года.
Однако сомневаюсь, что ситуация изменилась в сторону толерантности пользователей к косякам на сайтах :)&lt;/p&gt;

&lt;p&gt;Как обычно, сложно гарантировать достоверность подобных исследований, хотя первая часть статьи пересказывает другими словами исследование Google.&lt;/p&gt;

&lt;p&gt;Приведу примеры фактов, которые должны заставлять задуматься и дизайнеров и разработчиков:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;67% пользователей заявляют, что с большей готовностью купили бы что-то на сайте, который оптимизирован для мобильных устройств;&lt;/li&gt;
&lt;li&gt;48% пользователей считают, что если сайт не слишком удобен на мобильных, значит данному бизнесу на это пофиг.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;И некоторые ожидания от мобильных версий сайтов:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Местоположение и рабочие часы;&lt;/li&gt;
&lt;li&gt;Найти всё что нужно за пару кликов;&lt;/li&gt;
&lt;li&gt;Кнопки побольше;&lt;/li&gt;
&lt;li&gt;Отсутствие горизонтального скроллинга.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Подборка интересного о CSS</title>
      <link>https://yarfullstack.com/post/2016-06/css/</link>
      <pubDate>Mon, 20 Jun 2016 22:28:06 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2016-06/css/</guid>
      <description>

&lt;p&gt;Сегодня немного интересностей про CSS. В фокусе !important, PostCSS и UnCss.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Так ли страшен important, как его малюют?&lt;/li&gt;
&lt;li&gt;PostCSS.&lt;/li&gt;
&lt;li&gt;UnCSS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;так-ли-страшен-important-как-его-малюют&#34;&gt;Так ли страшен important, как его малюют?&lt;/h2&gt;

&lt;p&gt;Прочитал на днях статью &lt;a href=&#39;http://csswizardry.com/2016/05/the-importance-of-important/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;The Importance of !important: Forcing Immutability in CSS&lt;/a&gt;.
Если вкратце &amp;mdash; не так уж бесполезен и вреден !important.&lt;/p&gt;

&lt;p&gt;Есть вполне жизненные и правильные варианты использования &amp;mdash; например, для утилитных классов с &amp;ldquo;text-align: center&amp;rdquo;.
Похоже, это теперь такая же &amp;ldquo;потому что так нельзя&amp;rdquo; страшилка среди верстальщиков, как GOTO среди программистов :)&lt;/p&gt;

&lt;h2 id=&#34;рекомендуемые-инструменты-для-css&#34;&gt;Рекомендуемые инструменты для CSS&lt;/h2&gt;

&lt;h3 id=&#34;postcss&#34;&gt;PostCSS&lt;/h3&gt;

&lt;p&gt;Мой любимый процессор CSS. Важно: пусть вас не путает название, это не пост-процессор :)
Подробнее об этом есть неплохая статья
&lt;a href=&#39;https://www.sitepoint.com/postcss-mythbusting/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;PostCSS Mythbusting: Four PostCSS Myths Busted&lt;/a&gt;
(перевод: &lt;a href=&#39;https://habrahabr.ru/post/280988/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;4 мифа о PostCSS&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Думаю, что позже поделюсь подробными впечатлениями об его использовании. Пока скажу, что весьма понравилась идея
использовать следующую версию CSS прямо сейчас с помощью &lt;a href=&#39;http://cssnext.io/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;postcss-cssnext&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;uncss&#34;&gt;UnCSS&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#39;https://github.com/giakki/uncss&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;UnCSS&lt;/a&gt; &amp;mdash; утилита для уничтожения неиспользуемого CSS.
С помощью &lt;a href=&#39;https://github.com/Obvious/phantomjs&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;PhantomJS&lt;/a&gt; рендерит страницы и выполняет JavaScript,
ищет используемые классы и удаляет остальные. Можно прицепить к Node.js, вызывать из командной строки или добавить плагин к PostCSS.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>