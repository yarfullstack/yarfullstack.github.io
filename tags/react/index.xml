<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>YarFullStack</title>
    <link>https://yarfullstack.com/tags/react/index.xml</link>
    <description>Recent content on YarFullStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <copyright>© 2016 OlegAxenow. &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34; rel=&#34;nofollow&#34; class=&#34;mb-ml&#34; target=&#34;_blank&#34;&gt;Some rights reserved.&lt;/a&gt;</copyright>
    <atom:link href="https://yarfullstack.com/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Про производительность .NET, React, Regex</title>
      <link>https://yarfullstack.com/post/2017-04/performance-dotnet-react-regex/</link>
      <pubDate>Thu, 27 Apr 2017 23:02:28 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2017-04/performance-dotnet-react-regex/</guid>
      <description>&lt;p&gt;С удовольствием прочитал статью &lt;a href=&#39;https://alexandrnikitin.github.io/blog/high-performance-dotnet-by-example/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;High-performance .NET by example: Filtering bot traffic&lt;/a&gt;.
Кстати, к ботам статья почти не имеет отношения, а вот к улучшению производительности &amp;mdash; очень даже. В частности,
есть примеры использования BenchmarkDotNet, PerfView, Intel VTune Amplifier, ILSpy, WinDbg и unsafe-кода.&lt;/p&gt;

&lt;h3 id=&#34;react&#34;&gt;React&lt;/h3&gt;

&lt;p&gt;На случай, если вас интересует производительность React &amp;mdash; почитайте статью &lt;a href=&#39;https://medium.com/dailyjs/react-is-slow-react-is-fast-optimizing-react-apps-in-practice-394176a11fba&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;React is Slow, React is Fast: Optimizing React Apps in Practice&lt;/a&gt;.
Её недавно перевели на Хабре &amp;mdash; &lt;a href=&#39;https://habrahabr.ru/post/327364/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;React медленный, React быстрый: оптимизация React-приложения на практике&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;regex&#34;&gt;Regex&lt;/h3&gt;

&lt;p&gt;И для тех, кто активно пользуется регулярными выражениями и заботится о производительности &amp;mdash; серия статей:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#39;https://swtch.com/~rsc/regexp/regexp1.html&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Regular Expression Matching Can Be Simple And Fast (but is slow in Java, Perl, PHP, Python, Ruby, ...)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#39;https://research.swtch.com/glob&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Glob Matching Can Be Simple And Fast Too&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Насчёт серии я, может, погорячился &amp;ndash; между ними перерыв в 10 лет. У автора замечены и другие интересные статьи.&lt;/p&gt;

&lt;h3 id=&#34;сюрприз&#34;&gt;Сюрприз&lt;/h3&gt;

&lt;p&gt;В заголовке не упомянуто, но я просто оставлю это здесь :)&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Not only is declarative code more readable, it also produces beautiful byte code and is therefore faster. Thanks &lt;a href=&#34;https://twitter.com/bmeurer&#34;&gt;@bmeurer&lt;/a&gt; &lt;a href=&#34;https://twitter.com/munichnug&#34;&gt;@munichnug&lt;/a&gt; &lt;a href=&#34;https://t.co/Iae0s3e40W&#34;&gt;pic.twitter.com/Iae0s3e40W&lt;/a&gt;&lt;/p&gt;&amp;mdash; Michael Haeuslmann (@michaelhaeu) &lt;a href=&#34;https://twitter.com/michaelhaeu/status/845003383153025024&#34;&gt;March 23, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Анонс ReactXP, React Fiber и Relay Modern</title>
      <link>https://yarfullstack.com/post/2017-04/react-fiber-reactxp-relay-modern/</link>
      <pubDate>Wed, 19 Apr 2017 21:50:12 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2017-04/react-fiber-reactxp-relay-modern/</guid>
      <description>&lt;h3 id=&#34;reactxp&#34;&gt;ReactXP&lt;/h3&gt;

&lt;p&gt;Компания Microsoft удивила. На этот раз &amp;mdash; приятно удивила.
&lt;a href=&#39;https://microsoft.github.io/reactxp/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Анонсирована библиотека ReactXP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Подробности по ссылке. Если вкратце &amp;mdash; это надстройка для React Native.
Декларируется, что с ней можно будет один раз написать весь UI, за исключением &amp;ldquo;platform-specific&amp;rdquo;.&lt;br /&gt;
&lt;/p&gt;

&lt;p&gt;Кстати, больше 4К звёзд на GitHub за 14 дней. Посмотрим, что будет дальше, и я не о звёздах :)&lt;/p&gt;

&lt;h3 id=&#34;react-fiber&#34;&gt;React Fiber&lt;/h3&gt;

&lt;p&gt;Месяц назад, в заметке &lt;a href=&#34;https://yarfullstack.com/post/2017-03/reactconf-2017/&#34;&gt;Новости ReactConf 2017&lt;/a&gt; я уже упоминал про React Fiber.
Теперь про него &lt;a href=&#39;https://techcrunch.com/2017/04/18/facebook-announces-react-fiber-a-rewrite-of-its-react-framework/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;заговорил и TechCrunch&lt;/a&gt;.
Напомню, Fiber &amp;mdash; это более продвинутая архитектура (на замену Reconciliation), делающая рендеринг инкрементальным.&lt;/p&gt;

&lt;p&gt;Ещё TechCrunch упоминает Relay Modern &amp;mdash; новую версию Relay (это фреймворк для data-driven приложений, использующий GraphQL).
Подробнее про него можно прочитать в статье &lt;a href=&#39;https://code.facebook.com/posts/1362748677097871/relay-modern-simpler-faster-more-extensible/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Relay Modern: Simpler, faster, more extensible&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Новости ReactConf 2017</title>
      <link>https://yarfullstack.com/post/2017-03/reactconf-2017/</link>
      <pubDate>Thu, 16 Mar 2017 23:09:38 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2017-03/reactconf-2017/</guid>
      <description>&lt;p&gt;Сегодня коротенько про новости &lt;a href=&#39;http://conf.reactjs.org/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;ReactConf 2017&lt;/a&gt;, проходившей 13 и 14 марта.
Основная новость &amp;mdash; в React 16 будет реализован алгоритм &lt;a href=&#39;https://github.com/acdlite/react-fiber-architecture/blob/master/README.md&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;React Fiber&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;И, что немаловажно, не придётся переписывать приложения на предыдущих версиях React под новую архитектуру. Привет, Angular 2 :)
&lt;/p&gt;

&lt;h3 id=&#34;вкратце-о-fiber&#34;&gt;Вкратце о Fiber&lt;/h3&gt;

&lt;p&gt;Если вы пишете на React, то вы наверняка в курсе про &lt;a href=&#39;https://facebook.github.io/react/docs/reconciliation.html&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Reconciliation&lt;/a&gt;
(архитектура diff-алгоритма React). А Fiber &amp;mdash; это более продвинутая архитекура, делающая рендеринг инкрементальным.&lt;/p&gt;

&lt;p&gt;Это позволяет задавать приоритеты &amp;ldquo;задачам&amp;rdquo; по отрисовке. Соответственно, долгоиграющая и малоприоритетная фоновая отрисовка данных
 может быть &amp;ldquo;пропущена&amp;rdquo;. Зачем? Чтобы не мешать отрисовке того, на чём в данный момент должен быть сосредоточен пользователей.&lt;/p&gt;

&lt;p&gt;За подробностями можно сходить по ссылке выше, есть ещё &lt;a href=&#39;https://github.com/facebook/react/issues/7942&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;немного деталей&lt;/a&gt;.
А ещё есть занимательное поясняющее видео (сам пока не смотрел):&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/ZCuYPiUIONs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;p&gt;Если вы меня спросите, когда всё это будет, я отправлю вас на сайт &lt;a href=&#39;http://isfiberreadyyet.com/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;http://isfiberreadyyet.com/&lt;/a&gt;.
А потом добавлю, что на той же конференции было озвучено, что Facebook уже использует его в продакшн.&lt;/p&gt;

&lt;h3 id=&#34;возврат-нескольких-компонентов-из-render&#34;&gt;Возврат нескольких компонентов из render&lt;/h3&gt;

&lt;p&gt;Я просто оставлю это здесь :)&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;...also, we&amp;#39;ll be able to return multiple components from render() 🎉&lt;/p&gt;&amp;mdash; Jed Watson (@JedWatson) &lt;a href=&#34;https://twitter.com/JedWatson/status/841343773225308165&#34;&gt;March 13, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;render() can now return multiple components. Lots of applause for this. &lt;a href=&#34;https://twitter.com/hashtag/reactconf?src=hash&#34;&gt;#reactconf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Rey Bango (@reybango) &lt;a href=&#34;https://twitter.com/reybango/status/841343678052368384&#34;&gt;March 13, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Ant Design</title>
      <link>https://yarfullstack.com/post/2017-02/react-ant-design/</link>
      <pubDate>Fri, 03 Mar 2017 13:38:21 +0300</pubDate>
      
      <guid>https://yarfullstack.com/post/2017-02/react-ant-design/</guid>
      <description>&lt;p&gt;&lt;a href=&#39;https://ant.design/docs/spec/introduce&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Ant Design&lt;/a&gt; &amp;mdash; это альтернатива &lt;a href=&#39;https://material.io/guidelines/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Material Design&lt;/a&gt;.
Что лучше, что хуже &amp;mdash; решать вам, я лишь делюсь информацией.&lt;/p&gt;

&lt;p&gt;Вы наверняка слышали про &lt;a href=&#39;http://www.material-ui.com/#/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Material UI&lt;/a&gt; &amp;mdash; библиотеку, которая реализует принципы Material Design для React.
Аналогично, есть реализация Ant Design &amp;mdash; &lt;a href=&#39;https://ant.design/docs/react/introduce&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Ant Design of React&lt;/a&gt;.
Подробно не смотрел, но выглядит красиво. Далее несколько восторженных отзывов про табличное представление.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#39;https://ant.design/components/table/&#39; rel=&#34;nofollow noopener noreferrer&#34; target=&#34;_blank&#34;&gt;Компонент Table&lt;/a&gt; внешне мне весьма понравился.
Лучше просто перейти по ссылке и посмотреть. Если вкратце, вот неполный список вкусняшек:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;freeze для столбцов и заголовков;&lt;/li&gt;
&lt;li&gt;объединение нескольких заголовков в группу;&lt;/li&gt;
&lt;li&gt;объединение ячеек (colspan/rowspan);&lt;/li&gt;
&lt;li&gt;inline-редактирование в строках;&lt;/li&gt;
&lt;li&gt;строки с детализацией, иерархические строки, вложенные таблицы.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;P.S. Возможно, вам будет интересно кто поддерживает разработку и использует Ant Design &amp;mdash; это, в первую очередь, Alibaba и Ant Financial (AliPay).&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>